Index: src/Actividad_1.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.Scanner;\n\npublic class Actividad_1 {\n\n    static final Scanner scan = new Scanner(System.in);\n\n    public static void main(String[] args) {\n\n        int op;\n        do {\n            op = menu();\n\n            switch (op) {\n                case 1 -> { //Multiplicar\n                    System.out.println(\"Tabla de Multiplicar\");\n                    int num = dameUnNumero();\n                    tablaMultiplicar(num);\n                }\n                case 2 -> { //Saludar\n                    int rep = dameUnNumero();\n                    String nombre = dameTexto();\n                    saludar(nombre, rep);\n                }\n                case 3 -> { //Numero Primo\n\n                    int num = dameUnNumero();\n                    mostarPrimos(num);\n\n                }\n                case 4 -> { //Sumar numeros\n                    System.out.println(\"Suma de Enteros\");\n                    int num = dameUnNumero();\n                    int suma = sumar(num);\n                    System.out.println(\"La suma total de \" + num + \" numeros enteros son: \" + suma);\n\n                }\n                case 5 -> { //Multiplicar Enteros\n\n                    System.out.println(\"Multiplicacion de Enteros\");\n                    int num = dameUnNumero();\n                    int multi = multiplicar(num);\n                    System.out.println(\"La multiplicacion total de \" + num + \" numeros enteros son: \" + multi);\n\n                }\n                case 6 -> { //Potencia numeros\n                    int num1 = dameUnNumero();\n                    int num2 = dameUnNumero();\n                    potencia(num1, num2);\n\n                }\n                case 7 -> { // Piramide\n\n                    int num = dameUnNumero();\n                    String simbolo = simbolo();\n                    piramide(num,simbolo);\n                }\n                case 8 -> { // Seri Fibonnacci\n\n                    int num = dameUnNumero();\n                    fibonacci(num);\n                }\n            }\n\n        } while (op != 9);\n\n    }\n\n\n    /**\n     * Esta funcion devuelve un menu en bucle\n     *\n     * @return op\n     */\n    public static int menu() {\n        //Inicializacion de Flujo de Trabajo\n\n        //Declaracion de Variables\n        int op;\n\n        //Menu en bucle hasta salir con 9\n        do {\n            System.out.println(\"1. Tabla de multiplicar\\n2. Saluda\\n3. Numeros Primos\\n4. Sumar n enteros\\n\" +\n                    \"5. Multiplicar n enteros\\n6. Potencia\\n7. Piramide\\n8. Fibonacci\\n9. Salir\");\n            op = scan.nextInt();\n\n        } while (op < 1 || op > 9);\n        return op;\n    }\n\n\n    /**\n     * Esta funcion devuelve un valor valido\n     *\n     * @return numero\n     */\n    public static int dameUnNumero() {\n        System.out.println(\"Introduce un numero: \");\n        while (!scan.hasNextInt()) {\n            System.out.println(\"Entrada invalida. Porfavor ingresa un numero valido: \");\n            scan.next();\n        }\n\n        int numero = scan.nextInt();\n        return numero;\n    }\n\n\n    /**\n     * Esta funcion pide texto (La funcion no funciona, no tengo idea porque)\n     *\n     * @return nombre\n     */\n    public static String dameTexto() {\n        System.out.println(\"Introduce el nombre: \");\n        String nombre = scan.nextLine();\n        return nombre;\n    }\n\n\n    /**\n     * Aqui se pide un simbolo para hacer la piramide (EL string no sirve por lo tanto la piramide tampoco)\n     * @return simbolo\n     */\n    public static String simbolo() {\n        System.out.println(\"Introduce el simbolo: \");\n        String simbolo = scan.nextLine();\n        return simbolo;\n    }\n\n\n    /**\n     * Esta funcion no devuelve nada, pero muestra una tabla de multiplicar\n     *\n     * @param numero\n     */\n    public static void tablaMultiplicar(int numero) {\n        for (int i = 1; i <= 10; i++) {\n            System.out.println(i + \" X \" + numero + \" = \" + (i * numero));\n        }\n    }\n\n\n    /**\n     * Funcion para repetir saludos\n     *\n     * @param nombre\n     * @param repeteciones\n     */\n    public static void saludar(String nombre, int repeteciones) {\n\n        for (int i = 1; i <= repeteciones; i++) {\n            System.out.println(\"Hola \" + nombre);\n        }\n\n    }\n\n\n    /**\n     * Aqui revisa si un numero es primo o no\n     * @param numero\n     */\n    public static boolean numeroPrimo(int numero) {\n        boolean esPrimo = true;\n\n        if (numero < 1) {\n            esPrimo = false;\n        } else {\n            for (int i = 2; i <= numero / 2; i++) {\n                if (numero % i == 0) {\n                    esPrimo = false;\n                }\n            }\n        }\n        return esPrimo;\n    }\n\n\n    /**\n     * Aqui nos devuelve los numeros primos hasta donde el usuario pide\n     * @param cantidad\n     */\n    public static void mostarPrimos(int cantidad) {\n        int contador = 0;\n        int numero = 2;\n\n        System.out.println(\"Primeros \" + cantidad + \" numeros primos: \");\n\n        while (contador < cantidad) {\n            if (numeroPrimo(numero)) {\n                System.out.print(numero + \" \");\n                contador++;\n            }\n            numero++;\n        }\n        System.out.println(\" \");\n    }\n\n\n    /**\n     * En este suma y devuelve el total\n     * @param primero\n     * @return suma\n     */\n    public static int sumar(int primero) {\n        int suma = 0;\n\n        for (int i = 1; i <= primero; i++){\n            suma+= i;\n        }\n        return suma;\n    }\n\n\n    /**\n     * En este multiplica y devuelve el valor\n     * @param primero\n     * @return multiplicar\n     */\n    public static int multiplicar(int primero) {\n        int multiplicar = 1;\n\n        for (int i = 1; i <= primero; i++){\n            multiplicar*= i;\n        }\n        return multiplicar;\n    }\n\n\n    /**\n     * Aqui potenciamos el numero hasta la potencia deseadq\n     * @param primero\n     * @param segundo\n     */\n    public static void potencia(int primero, int segundo){\n\n        int resultado = 1;\n\n        for (int i = 0; i < segundo; i++){\n            resultado*=primero;\n        }\n        System.out.println(\"El resultado de \" + primero + \" elevado a \" + segundo + \" da como resultado: \" + resultado);\n\n    }\n\n\n    /**\n     * En este bloque hacemos la piramide y la imprimimos\n     * @param numero\n     * @param simbolo\n     */\n    public static void piramide(int numero,String simbolo){\n\n        for (int i = 1; i <= numero; i++){\n            for (int j = 1; j <= i; j++){\n                System.out.println(simbolo);\n            }\n            System.out.println();\n        }\n    }\n\n\n    /**\n     * Por ultimo, aqui generamos e imprimimos la serie de fibonacci\n     * @param numero\n     */\n    public static void fibonacci(int numero){\n\n        int num = 0;\n        int num2 = 1;\n        int num3 = 0;\n\n        System.out.print(\"0\" + \" 1 \");\n\n        for (int i = 2; i < numero; i++){\n\n            num3 = num + num2;\n            num = num2;\n            num2 = num3;\n            System.out.print(num3 + \" \");\n        }\n        System.out.println();\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Actividad_1.java b/src/Actividad_1.java
--- a/src/Actividad_1.java	(revision d9a9a71b6fa37ce2d83774871e8a0a169f86ba50)
+++ b/src/Actividad_1.java	(date 1731346828636)
@@ -231,15 +231,15 @@
      * @param primero
      * @param segundo
      */
-    public static void potencia(int primero, int segundo){
+    public static int potencia(int primero, int segundo){
 
         int resultado = 1;
 
         for (int i = 0; i < segundo; i++){
             resultado*=primero;
         }
-        System.out.println("El resultado de " + primero + " elevado a " + segundo + " da como resultado: " + resultado);
 
+        return resultado;
     }
 
 
